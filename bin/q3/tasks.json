{
  "tasks": [
    {
      "id": 1,
      "name": "Prepare and Validate Sales Data",
      "description": "Load the `sample-sales.csv` file. Ensure the 'Sales' column is numeric and the 'Date' column is parsed as a datetime object. Handle any missing values if present (e.g., by dropping rows with NaNs in critical columns). The cleaned and validated data should be saved to an intermediate CSV file for subsequent tasks.",
      "information_needed": {
        "input_csv_file_name": "sample-sales.csv",
        "expected_columns": ["Sales", "Region", "Date"],
        "sales_column_type": "numeric",
        "date_column_type": "datetime",
        "missing_value_handling": "drop rows with missing values in 'Sales', 'Region', or 'Date'"
      },
      "files_for_reference": ["sample-sales.csv"],
      "output_file_name": "prepared_sales_data.csv"
    },
    {
      "id": 2,
      "name": "Calculate Total Sales",
      "description": "Load the `prepared_sales_data.csv`. Sum the values in the 'Sales' column to find the total sales across all regions. Store this number in a JSON file.",
      "information_needed": {
        "sales_column_name": "Sales"
      },
      "files_for_reference": ["prepared_sales_data.csv"],
      "output_file_name": "total_sales.json"
    },
    {
      "id": 3,
      "name": "Identify Top Region by Sales",
      "description": "Load the `prepared_sales_data.csv`. Group the data by the 'Region' column and calculate the sum of 'Sales' for each region. Identify the region with the highest total sales. Store the name of this region in a JSON file.",
      "information_needed": {
        "sales_column_name": "Sales",
        "region_column_name": "Region"
      },
      "files_for_reference": ["prepared_sales_data.csv"],
      "output_file_name": "top_region.json"
    },
    {
      "id": 4,
      "name": "Calculate Day of Month vs. Sales Correlation",
      "description": "Load the `prepared_sales_data.csv`. From the 'Date' column, extract the day of the month (e.g., 1 to 31). Calculate the Pearson correlation coefficient between this 'day of month' series and the 'Sales' series. Store this number in a JSON file.",
      "information_needed": {
        "date_column_name": "Date",
        "sales_column_name": "Sales",
        "correlation_method": "Pearson"
      },
      "files_for_reference": ["prepared_sales_data.csv"],
      "output_file_name": "day_sales_correlation.json"
    },
    {
      "id": 5,
      "name": "Generate Total Sales by Region Bar Chart",
      "description": "Load the `prepared_sales_data.csv`. Aggregate total sales by 'Region'. Create a bar chart where each bar represents a region's total sales. The bars must be blue. The chart should be encoded as a base64 PNG string. Ensure the final base64 string results in an image size under 100kB. Store the base64 string in a text file.",
      "information_needed": {
        "sales_column_name": "Sales",
        "region_column_name": "Region",
        "bar_color": "blue",
        "output_format": "base64 PNG",
        "max_file_size_kb": 100
      },
      "files_for_reference": ["prepared_sales_data.csv"],
      "output_file_name": "bar_chart_base64.txt"
    },
    {
      "id": 6,
      "name": "Calculate Median Sales Amount",
      "description": "Load the `prepared_sales_data.csv`. Calculate the median value of the 'Sales' column across all individual orders. Store this number in a JSON file.",
      "information_needed": {
        "sales_column_name": "Sales"
      },
      "files_for_reference": ["prepared_sales_data.csv"],
      "output_file_name": "median_sales.json"
    },
    {
      "id": 7,
      "name": "Calculate Total Sales Tax",
      "description": "Load the `total_sales.json` file generated in Task 2 to retrieve the total sales value. Calculate the total sales tax based on a 10% tax rate. Store this number in a JSON file.",
      "information_needed": {
        "tax_rate_percentage": 10
      },
      "files_for_reference": ["total_sales.json"],
      "output_file_name": "total_sales_tax.json"
    },
    {
      "id": 8,
      "name": "Generate Cumulative Sales Over Time Chart",
      "description": "Load the `prepared_sales_data.csv`. Sort the data by the 'Date' column in ascending order. Calculate the cumulative sum of 'Sales' over this sorted timeline. Create a line chart showing this cumulative sales progression. The line must be red. The chart should be encoded as a base64 PNG string. Ensure the final base64 string results in an image size under 100kB. Store the base64 string in a text file.",
      "information_needed": {
        "date_column_name": "Date",
        "sales_column_name": "Sales",
        "line_color": "red",
        "output_format": "base64 PNG",
        "max_file_size_kb": 100
      },
      "files_for_reference": ["prepared_sales_data.csv"],
      "output_file_name": "cumulative_sales_chart_base64.txt"
    },
    {
      "id": 9,
      "name": "Consolidate Final Output",
      "description": "Collect all the individual results from the preceding tasks and combine them into a single JSON object. The keys of this JSON object must be `total_sales`, `top_region`, `day_sales_correlation`, `bar_chart`, `median_sales`, `total_sales_tax`, and `cumulative_sales_chart`. Ensure all values are in the correct format (number, string, or base64 string).",
      "information_needed": {
        "input_keys_and_files": {
          "total_sales": "total_sales.json",
          "top_region": "top_region.json",
          "day_sales_correlation": "day_sales_correlation.json",
          "bar_chart": "bar_chart_base64.txt",
          "median_sales": "median_sales.json",
          "total_sales_tax": "total_sales_tax.json",
          "cumulative_sales_chart": "cumulative_sales_chart_base64.txt"
        }
      },
      "files_for_reference": [
        "total_sales.json",
        "top_region.json",
        "day_sales_correlation.json",
        "bar_chart_base64.txt",
        "median_sales.json",
        "total_sales_tax.json",
        "cumulative_sales_chart_base64.txt"
      ],
      "output_file_name": "final_analysis_results.json"
    }
  ]
}