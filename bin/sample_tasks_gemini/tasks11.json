{
  "tasks": [
    {
      "id": 1,
      "name": "Scrape Data from Wikipedia",
      "description": "Scrape the list of highest grossing films from the provided Wikipedia URL. The output should be the raw tabular data, preserving all columns as found on the page.",
      "information_needed": {
        "url": "https://en.wikipedia.org/wiki/List_of_highest-grossing_films"
      }
    },
    {
      "id": 2,
      "name": "Preprocess Scraped Data",
      "description": "Clean and transform the raw tabular data obtained from scraping. This includes parsing numerical values (e.g., gross, rank, peak position), converting release years to integers, and handling any missing or inconsistent data to prepare it for analysis. Ensure 'Gross' values are converted to a consistent numerical format (e.g., a float representing billions of dollars), and 'Release Year', 'Rank', and 'Peak' (referring to Peak position) are proper numerical types (integers or floats as appropriate).",
      "information_needed": {}
    },
    {
      "id": 3,
      "name": "Calculate $2 Billion Movies Before 2020",
      "description": "From the processed data, count the number of movies that had a gross revenue of $2 billion or more and were released before the year 2020.",
      "information_needed": {}
    },
    {
      "id": 4,
      "name": "Identify Earliest $1.5 Billion Film",
      "description": "From the processed data, identify the film with the earliest release year that grossed over $1.5 billion. The output should be the name of this film.",
      "information_needed": {}
    },
    {
      "id": 5,
      "name": "Calculate Correlation Between Rank and Peak",
      "description": "From the processed data, calculate the Pearson correlation coefficient between the 'Rank' and 'Peak' (Peak position) columns.",
      "information_needed": {}
    },
    {
      "id": 6,
      "name": "Generate Scatterplot with Regression Line",
      "description": "Using the 'Rank' and 'Peak' (Peak position) data, create a scatterplot. Overlay a dotted red regression line onto this plot. The resulting plot should be returned as a base-64 encoded PNG data URI, ensuring the total size is under 100,000 bytes.",
      "information_needed": {}
    },
    {
      "id": 7,
      "name": "Format Final Answers",
      "description": "Compile the answers obtained from Task 3, Task 4, Task 5, and Task 6 into a single JSON array of strings. The order should correspond to the original question numbers (Q1 answer, Q2 answer, Q3 answer, Q4 plot URI).",
      "information_needed": {}
    }
  ]
}