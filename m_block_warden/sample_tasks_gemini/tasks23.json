{
  "tasks": [
    {
      "id": 1,
      "name": "Load Indian High Court Judgments Metadata",
      "description": "Access and load the structured metadata for Indian High Court judgments. The data is stored in Parquet format on an S3 bucket and can be efficiently queried using DuckDB. This task involves setting up DuckDB for S3 access and loading the relevant dataset.",
      "information_needed": {
        "data_source_url": "s3://indian-high-court-judgments/metadata/parquet/year=*/court=*/bench=*/metadata.parquet",
        "s3_region": "ap-south-1",
        "duckdb_setup_commands": [
          "INSTALL httpfs;",
          "LOAD httpfs;",
          "INSTALL parquet;",
          "LOAD parquet;"
        ],
        "data_schema": [
          { "column": "court_code", "type": "VARCHAR", "description": "Court identifier (e.g., 33~10)" },
          { "column": "title", "type": "VARCHAR", "description": "Case title and parties" },
          { "column": "description", "type": "VARCHAR", "description": "Case description" },
          { "column": "judge", "type": "VARCHAR", "description": "Presiding judge(s)" },
          { "column": "pdf_link", "type": "VARCHAR", "description": "Link to judgment PDF" },
          { "column": "cnr", "type": "VARCHAR", "description": "Case Number Register" },
          { "column": "date_of_registration", "type": "VARCHAR", "description": "Registration date" },
          { "column": "decision_date", "type": "DATE", "description": "Date of judgment" },
          { "column": "disposal_nature", "type": "VARCHAR", "description": "Case outcome" },
          { "column": "court", "type": "VARCHAR", "description": "Court name" },
          { "column": "raw_html", "type": "VARCHAR", "description": "Original HTML content" },
          { "column": "bench", "type": "VARCHAR", "description": "Bench identifier" },
          { "column": "year", "type": "BIGINT", "description": "Year partition" }
        ],
        "sample_row": {
          "court_code": "33~10",
          "title": "CRL MP(MD)/4399/2023 of Vinoth Vs The Inspector of Police",
          "description": "No.4399 of 2023 BEFORE THE MADURAI BENCH OF MADRAS HIGH COURT ( Criminal Jurisdiction ) Thursday, ...",
          "judge": "HONOURABLE MR JUSTICE G.K. ILANTHirAIYAN",
          "pdf_link": "court/cnrorders/mdubench/orders/HCMD010287762023_1_2023-03-16.pdf",
          "cnr": "HCMD010287762023",
          "date_of_registration": "14-03-2023",
          "decision_date": "2023-03-16",
          "disposal_nature": "DISMISSED",
          "court": "33_10",
          "raw_html": "<button type='button' role='link'..",
          "bench": "mdubench",
          "year": 2023
        }
      }
    },
    {
      "id": 2,
      "name": "Identify High Court with Most Disposed Cases (2019-2022)",
      "description": "From the loaded dataset, determine which high court (identified by the 'court' column) disposed of the most cases within the period from January 1, 2019, to December 31, 2022 (inclusive). The result should be the name of the high court as a string.",
      "information_needed": {
        "required_columns": ["court", "decision_date"],
        "date_range_filter": {
          "column": "decision_date",
          "start_date": "2019-01-01",
          "end_date": "2022-12-31"
        },
        "aggregation_method": "Count cases grouped by 'court' and identify the court with the maximum count."
      }
    },
    {
      "id": 3,
      "name": "Calculate Regression Slope of Delay for Specific Court",
      "description": "For the specific high court identified by `court='33_10'`, calculate the linear regression slope of the 'delay' (defined as the number of days between `date_of_registration` and `decision_date`) against the `year`. The `date_of_registration` column is a VARCHAR and needs to be parsed into a date format before calculating the difference.",
      "information_needed": {
        "required_columns": ["date_of_registration", "decision_date", "year", "court"],
        "specific_court_filter": {
          "column": "court",
          "value": "33_10"
        },
        "calculation_steps": [
          "Parse 'date_of_registration' (VARCHAR) into a date type (e.g., 'DD-MM-YYYY' format).",
          "Calculate 'delay_in_days' = `decision_date` - parsed `date_of_registration` (in days).",
          "Perform linear regression where 'delay_in_days' is the dependent variable (Y) and 'year' is the independent variable (X).",
          "Extract the slope of this regression."
        ]
      }
    },
    {
      "id": 4,
      "name": "Plot Delay vs. Year and Encode as Base64 Image",
      "description": "Generate a scatterplot based on the data used in Task 3 (for `court='33_10'`). The plot should display 'year' on the X-axis and '# of days of delay' (calculated as `decision_date - date_of_registration`) on the Y-axis. A regression line, corresponding to the slope calculated in Task 3, must be overlaid on the scatterplot. The final plot should be encoded as a base64 data URI in WEBP format, ensuring the URI string is under 100,000 characters.",
      "information_needed": {
        "data_source": "Data filtered for `court='33_10'` with `year` and `delay_in_days` (from Task 3).",
        "plot_type": "Scatterplot with an overlaid regression line.",
        "x_axis_variable": "year",
        "y_axis_variable": "# of days of delay",
        "output_format": "Base64 data URI (specifically `data:image/webp:base64,...`)",
        "size_constraint": "Under 100,000 characters"
      }
    }
  ]
}